{
  "resolvedId": "/Users/mmk/listen/listen-nuxt/node_modules/@unhead/vue/dist/shared/vue.cf295fb1.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { version, unref, nextTick, inject } from 'vue';\nimport { createServerHead as createServerHead$1, createHead as createHead$1, getActiveHead } from 'unhead';\nimport { defineHeadPlugin } from '@unhead/shared';\n\nconst Vue3 = version.startsWith(\"3\");\n\nfunction resolveUnref(r) {\n  return typeof r === \"function\" ? r() : unref(r);\n}\nfunction resolveUnrefHeadInput(ref, lastKey = \"\") {\n  if (ref instanceof Promise)\n    return ref;\n  const root = resolveUnref(ref);\n  if (!ref || !root)\n    return root;\n  if (Array.isArray(root))\n    return root.map((r) => resolveUnrefHeadInput(r, lastKey));\n  if (typeof root === \"object\") {\n    return Object.fromEntries(\n      Object.entries(root).map(([k, v]) => {\n        if (k === \"titleTemplate\" || k.startsWith(\"on\"))\n          return [k, unref(v)];\n        return [k, resolveUnrefHeadInput(v, k)];\n      })\n    );\n  }\n  return root;\n}\n\nconst VueReactivityPlugin = defineHeadPlugin({\n  hooks: {\n    \"entries:resolve\": function(ctx) {\n      for (const entry of ctx.entries)\n        entry.resolvedInput = resolveUnrefHeadInput(entry.input);\n    }\n  }\n});\n\nconst headSymbol = \"usehead\";\nfunction vueInstall(head) {\n  const plugin = {\n    install(app) {\n      if (Vue3) {\n        app.config.globalProperties.$unhead = head;\n        app.config.globalProperties.$head = head;\n        app.provide(headSymbol, head);\n      }\n    }\n  };\n  return plugin.install;\n}\nfunction createServerHead(options = {}) {\n  const head = createServerHead$1(options);\n  head.use(VueReactivityPlugin);\n  head.install = vueInstall(head);\n  return head;\n}\nfunction createHead(options = {}) {\n  options.domDelayFn = options.domDelayFn || ((fn) => nextTick(() => setTimeout(() => fn(), 0)));\n  const head = createHead$1(options);\n  head.use(VueReactivityPlugin);\n  head.install = vueInstall(head);\n  return head;\n}\n\nconst _global = typeof globalThis !== \"undefined\" ? globalThis : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : {};\nconst globalKey = \"__unhead_injection_handler__\";\nfunction setHeadInjectionHandler(handler) {\n  _global[globalKey] = handler;\n}\nfunction injectHead() {\n  if (globalKey in _global) {\n    return _global[globalKey]();\n  }\n  const head = inject(headSymbol);\n  if (!head && process.env.NODE_ENV !== \"production\")\n    console.warn(\"Unhead is missing Vue context, falling back to shared context. This may have unexpected results.\");\n  return head || getActiveHead();\n}\n\nexport { Vue3 as V, createServerHead as a, createHead as c, headSymbol as h, injectHead as i, resolveUnrefHeadInput as r, setHeadInjectionHandler as s };\n",
      "start": 1712416380120,
      "end": 1712416380130,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712416380130,
      "end": 1712416380130,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712416380130,
      "end": 1712416380130,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712416380130,
      "end": 1712416380130,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712416380130,
      "end": 1712416380130,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1712416380130,
      "end": 1712416380131,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1712416380131,
      "end": 1712416380131,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1712416380131,
      "end": 1712416380131,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1712416380131,
      "end": 1712416380131,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1712416380131,
      "end": 1712416380131,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1712416380131,
      "end": 1712416380131,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1712416380131,
      "end": 1712416380131,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1712416380131,
      "end": 1712416380131,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712416380131,
      "end": 1712416380131,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712416380131,
      "end": 1712416380131,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712416380131,
      "end": 1712416380131,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712416380131,
      "end": 1712416380131,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1712416380131,
      "end": 1712416380131,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712416380131,
      "end": 1712416380131,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1712416380131,
      "end": 1712416380131,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { version, unref, nextTick, inject } from \"vue\";\nimport { createServerHead as createServerHead$1, createHead as createHead$1, getActiveHead } from \"unhead\";\nimport { defineHeadPlugin } from \"@unhead/shared\";\nconst Vue3 = version.startsWith(\"3\");\nfunction resolveUnref(r) {\n  return typeof r === \"function\" ? r() : unref(r);\n}\nfunction resolveUnrefHeadInput(ref, lastKey = \"\") {\n  if (ref instanceof Promise)\n    return ref;\n  const root = resolveUnref(ref);\n  if (!ref || !root)\n    return root;\n  if (Array.isArray(root))\n    return root.map((r) => resolveUnrefHeadInput(r, lastKey));\n  if (typeof root === \"object\") {\n    return Object.fromEntries(\n      Object.entries(root).map(([k, v]) => {\n        if (k === \"titleTemplate\" || k.startsWith(\"on\"))\n          return [k, unref(v)];\n        return [k, resolveUnrefHeadInput(v, k)];\n      })\n    );\n  }\n  return root;\n}\nconst VueReactivityPlugin = defineHeadPlugin({\n  hooks: {\n    \"entries:resolve\": function(ctx) {\n      for (const entry of ctx.entries)\n        entry.resolvedInput = resolveUnrefHeadInput(entry.input);\n    }\n  }\n});\nconst headSymbol = \"usehead\";\nfunction vueInstall(head) {\n  const plugin = {\n    install(app) {\n      if (Vue3) {\n        app.config.globalProperties.$unhead = head;\n        app.config.globalProperties.$head = head;\n        app.provide(headSymbol, head);\n      }\n    }\n  };\n  return plugin.install;\n}\nfunction createServerHead(options = {}) {\n  const head = createServerHead$1(options);\n  head.use(VueReactivityPlugin);\n  head.install = vueInstall(head);\n  return head;\n}\nfunction createHead(options = {}) {\n  options.domDelayFn = options.domDelayFn || ((fn) => nextTick(() => setTimeout(() => fn(), 0)));\n  const head = createHead$1(options);\n  head.use(VueReactivityPlugin);\n  head.install = vueInstall(head);\n  return head;\n}\nconst _global = typeof globalThis !== \"undefined\" ? globalThis : false ? void 0 : typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : {};\nconst globalKey = \"__unhead_injection_handler__\";\nfunction setHeadInjectionHandler(handler) {\n  _global[globalKey] = handler;\n}\nfunction injectHead() {\n  if (globalKey in _global) {\n    return _global[globalKey]();\n  }\n  const head = inject(headSymbol);\n  if (!head && process.env.NODE_ENV !== \"production\")\n    console.warn(\"Unhead is missing Vue context, falling back to shared context. This may have unexpected results.\");\n  return head || getActiveHead();\n}\nexport { Vue3 as V, createServerHead as a, createHead as c, headSymbol as h, injectHead as i, resolveUnrefHeadInput as r, setHeadInjectionHandler as s };\n",
      "start": 1712416380131,
      "end": 1712416380146,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"/Users/mmk/listen/listen-nuxt/node_modules/@unhead/vue/dist/shared/vue.cf295fb1.mjs\"],\n  \"sourcesContent\": [\"import { version, unref, nextTick, inject } from 'vue';\\nimport { createServerHead as createServerHead$1, createHead as createHead$1, getActiveHead } from 'unhead';\\nimport { defineHeadPlugin } from '@unhead/shared';\\n\\nconst Vue3 = version.startsWith(\\\"3\\\");\\n\\nfunction resolveUnref(r) {\\n  return typeof r === \\\"function\\\" ? r() : unref(r);\\n}\\nfunction resolveUnrefHeadInput(ref, lastKey = \\\"\\\") {\\n  if (ref instanceof Promise)\\n    return ref;\\n  const root = resolveUnref(ref);\\n  if (!ref || !root)\\n    return root;\\n  if (Array.isArray(root))\\n    return root.map((r) => resolveUnrefHeadInput(r, lastKey));\\n  if (typeof root === \\\"object\\\") {\\n    return Object.fromEntries(\\n      Object.entries(root).map(([k, v]) => {\\n        if (k === \\\"titleTemplate\\\" || k.startsWith(\\\"on\\\"))\\n          return [k, unref(v)];\\n        return [k, resolveUnrefHeadInput(v, k)];\\n      })\\n    );\\n  }\\n  return root;\\n}\\n\\nconst VueReactivityPlugin = defineHeadPlugin({\\n  hooks: {\\n    \\\"entries:resolve\\\": function(ctx) {\\n      for (const entry of ctx.entries)\\n        entry.resolvedInput = resolveUnrefHeadInput(entry.input);\\n    }\\n  }\\n});\\n\\nconst headSymbol = \\\"usehead\\\";\\nfunction vueInstall(head) {\\n  const plugin = {\\n    install(app) {\\n      if (Vue3) {\\n        app.config.globalProperties.$unhead = head;\\n        app.config.globalProperties.$head = head;\\n        app.provide(headSymbol, head);\\n      }\\n    }\\n  };\\n  return plugin.install;\\n}\\nfunction createServerHead(options = {}) {\\n  const head = createServerHead$1(options);\\n  head.use(VueReactivityPlugin);\\n  head.install = vueInstall(head);\\n  return head;\\n}\\nfunction createHead(options = {}) {\\n  options.domDelayFn = options.domDelayFn || ((fn) => nextTick(() => setTimeout(() => fn(), 0)));\\n  const head = createHead$1(options);\\n  head.use(VueReactivityPlugin);\\n  head.install = vueInstall(head);\\n  return head;\\n}\\n\\nconst _global = typeof globalThis !== \\\"undefined\\\" ? globalThis : typeof window !== \\\"undefined\\\" ? window : typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : {};\\nconst globalKey = \\\"__unhead_injection_handler__\\\";\\nfunction setHeadInjectionHandler(handler) {\\n  _global[globalKey] = handler;\\n}\\nfunction injectHead() {\\n  if (globalKey in _global) {\\n    return _global[globalKey]();\\n  }\\n  const head = inject(headSymbol);\\n  if (!head && process.env.NODE_ENV !== \\\"production\\\")\\n    console.warn(\\\"Unhead is missing Vue context, falling back to shared context. This may have unexpected results.\\\");\\n  return head || getActiveHead();\\n}\\n\\nexport { Vue3 as V, createServerHead as a, createHead as c, headSymbol as h, injectHead as i, resolveUnrefHeadInput as r, setHeadInjectionHandler as s };\\n\"],\n  \"mappings\": \"AAAA,SAAS,SAAS,OAAO,UAAU,cAAc;AACjD,SAAS,oBAAoB,oBAAoB,cAAc,cAAc,qBAAqB;AAClG,SAAS,wBAAwB;AAEjC,MAAM,OAAO,QAAQ,WAAW,GAAG;AAEnC,SAAS,aAAa,GAAG;AACvB,SAAO,OAAO,MAAM,aAAa,EAAE,IAAI,MAAM,CAAC;AAChD;AACA,SAAS,sBAAsB,KAAK,UAAU,IAAI;AAChD,MAAI,eAAe;AACjB,WAAO;AACT,QAAM,OAAO,aAAa,GAAG;AAC7B,MAAI,CAAC,OAAO,CAAC;AACX,WAAO;AACT,MAAI,MAAM,QAAQ,IAAI;AACpB,WAAO,KAAK,IAAI,CAAC,MAAM,sBAAsB,GAAG,OAAO,CAAC;AAC1D,MAAI,OAAO,SAAS,UAAU;AAC5B,WAAO,OAAO;AAAA,MACZ,OAAO,QAAQ,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM;AACnC,YAAI,MAAM,mBAAmB,EAAE,WAAW,IAAI;AAC5C,iBAAO,CAAC,GAAG,MAAM,CAAC,CAAC;AACrB,eAAO,CAAC,GAAG,sBAAsB,GAAG,CAAC,CAAC;AAAA,MACxC,CAAC;AAAA,IACH;AAAA,EACF;AACA,SAAO;AACT;AAEA,MAAM,sBAAsB,iBAAiB;AAAA,EAC3C,OAAO;AAAA,IACL,mBAAmB,SAAS,KAAK;AAC/B,iBAAW,SAAS,IAAI;AACtB,cAAM,gBAAgB,sBAAsB,MAAM,KAAK;AAAA,IAC3D;AAAA,EACF;AACF,CAAC;AAED,MAAM,aAAa;AACnB,SAAS,WAAW,MAAM;AACxB,QAAM,SAAS;AAAA,IACb,QAAQ,KAAK;AACX,UAAI,MAAM;AACR,YAAI,OAAO,iBAAiB,UAAU;AACtC,YAAI,OAAO,iBAAiB,QAAQ;AACpC,YAAI,QAAQ,YAAY,IAAI;AAAA,MAC9B;AAAA,IACF;AAAA,EACF;AACA,SAAO,OAAO;AAChB;AACA,SAAS,iBAAiB,UAAU,CAAC,GAAG;AACtC,QAAM,OAAO,mBAAmB,OAAO;AACvC,OAAK,IAAI,mBAAmB;AAC5B,OAAK,UAAU,WAAW,IAAI;AAC9B,SAAO;AACT;AACA,SAAS,WAAW,UAAU,CAAC,GAAG;AAChC,UAAQ,aAAa,QAAQ,eAAe,CAAC,OAAO,SAAS,MAAM,WAAW,MAAM,GAAG,GAAG,CAAC,CAAC;AAC5F,QAAM,OAAO,aAAa,OAAO;AACjC,OAAK,IAAI,mBAAmB;AAC5B,OAAK,UAAU,WAAW,IAAI;AAC9B,SAAO;AACT;AAEA,MAAM,UAAU,OAAO,eAAe,cAAc,aAAa,QAAgC,SAAS,OAAO,WAAW,cAAc,SAAS,OAAO,SAAS,cAAc,OAAO,CAAC;AACzL,MAAM,YAAY;AAClB,SAAS,wBAAwB,SAAS;AACxC,UAAQ,SAAS,IAAI;AACvB;AACA,SAAS,aAAa;AACpB,MAAI,aAAa,SAAS;AACxB,WAAO,QAAQ,SAAS,EAAE;AAAA,EAC5B;AACA,QAAM,OAAO,OAAO,UAAU;AAC9B,MAAI,CAAC,QAAQ,QAAQ,IAAI,aAAa;AACpC,YAAQ,KAAK,kGAAkG;AACjH,SAAO,QAAQ,cAAc;AAC/B;AAEA,SAAS,QAAQ,GAAG,oBAAoB,GAAG,cAAc,GAAG,cAAc,GAAG,cAAc,GAAG,yBAAyB,GAAG,2BAA2B;\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1712416380146,
      "end": 1712416380146,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1712416380146,
      "end": 1712416380146,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1712416380146,
      "end": 1712416380146,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1712416380146,
      "end": 1712416380146,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1712416380146,
      "end": 1712416380146,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1712416380146,
      "end": 1712416380146,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1712416380146,
      "end": 1712416380146,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712416380146,
      "end": 1712416380146,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712416380146,
      "end": 1712416380146,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1712416380146,
      "end": 1712416380146,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1712416380146,
      "end": 1712416380146,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712416380146,
      "end": 1712416380146,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712416380146,
      "end": 1712416380146,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712416380146,
      "end": 1712416380146,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712416380146,
      "end": 1712416380146,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1712416380146,
      "end": 1712416380146,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1712416380146,
      "end": 1712416380146,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1712416380146,
      "end": 1712416380146,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1712416380146,
      "end": 1712416380146,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1712416380146,
      "end": 1712416380146,
      "order": "normal"
    }
  ]
}
