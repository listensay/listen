{
  "resolvedId": "/Users/mmk/listen/listen-nuxt/node_modules/nuxt/dist/pages/runtime/utils.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { KeepAlive, h } from \"vue\";\nconst interpolatePath = (route, match) => {\n  return match.path.replace(/(:\\w+)\\([^)]+\\)/g, \"$1\").replace(/(:\\w+)[?+*]/g, \"$1\").replace(/:\\w+/g, (r) => route.params[r.slice(1)]?.toString() || \"\");\n};\nexport const generateRouteKey = (routeProps, override) => {\n  const matchedRoute = routeProps.route.matched.find((m) => m.components?.default === routeProps.Component.type);\n  const source = override ?? matchedRoute?.meta.key ?? (matchedRoute && interpolatePath(routeProps.route, matchedRoute));\n  return typeof source === \"function\" ? source(routeProps.route) : source;\n};\nexport const wrapInKeepAlive = (props, children) => {\n  return { default: () => import.meta.client && props ? h(KeepAlive, props === true ? {} : props, children) : children };\n};\nexport function toArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\n",
      "start": 1712416380128,
      "end": 1712416380148,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712416380148,
      "end": 1712416380148,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712416380148,
      "end": 1712416380148,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712416380148,
      "end": 1712416380148,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712416380148,
      "end": 1712416380148,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1712416380148,
      "end": 1712416380148,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1712416380148,
      "end": 1712416380148,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1712416380148,
      "end": 1712416380148,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1712416380148,
      "end": 1712416380148,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1712416380148,
      "end": 1712416380148,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1712416380148,
      "end": 1712416380148,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1712416380148,
      "end": 1712416380148,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1712416380148,
      "end": 1712416380148,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712416380148,
      "end": 1712416380148,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712416380148,
      "end": 1712416380148,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712416380148,
      "end": 1712416380148,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712416380148,
      "end": 1712416380148,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1712416380148,
      "end": 1712416380148,
      "order": "normal"
    },
    {
      "name": "replace",
      "result": "import { KeepAlive, h } from \"vue\";\nconst interpolatePath = (route, match) => {\n  return match.path.replace(/(:\\w+)\\([^)]+\\)/g, \"$1\").replace(/(:\\w+)[?+*]/g, \"$1\").replace(/:\\w+/g, (r) => route.params[r.slice(1)]?.toString() || \"\");\n};\nexport const generateRouteKey = (routeProps, override) => {\n  const matchedRoute = routeProps.route.matched.find((m) => m.components?.default === routeProps.Component.type);\n  const source = override ?? matchedRoute?.meta.key ?? (matchedRoute && interpolatePath(routeProps.route, matchedRoute));\n  return typeof source === \"function\" ? source(routeProps.route) : source;\n};\nexport const wrapInKeepAlive = (props, children) => {\n  return { default: () => false && props ? h(KeepAlive, props === true ? {} : props, children) : children };\n};\nexport function toArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\n",
      "start": 1712416380148,
      "end": 1712416380148,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnxjzrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzH,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC;"
      }
    },
    {
      "name": "ssr-styles",
      "start": 1712416380148,
      "end": 1712416380148,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1712416380148,
      "end": 1712416380148,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1712416380148,
      "end": 1712416380148,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1712416380148,
      "end": 1712416380148,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1712416380148,
      "end": 1712416380148,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1712416380148,
      "end": 1712416380148,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1712416380148,
      "end": 1712416380149,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1712416380149,
      "end": 1712416380149,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1712416380149,
      "end": 1712416380149,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712416380149,
      "end": 1712416380149,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712416380149,
      "end": 1712416380149,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1712416380149,
      "end": 1712416380149,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1712416380149,
      "end": 1712416380149,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712416380149,
      "end": 1712416380149,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712416380149,
      "end": 1712416380149,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712416380149,
      "end": 1712416380149,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712416380149,
      "end": 1712416380149,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1712416380149,
      "end": 1712416380149,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1712416380149,
      "end": 1712416380149,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1712416380149,
      "end": 1712416380149,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1712416380149,
      "end": 1712416380149,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1712416380149,
      "end": 1712416380149,
      "order": "normal"
    }
  ]
}
