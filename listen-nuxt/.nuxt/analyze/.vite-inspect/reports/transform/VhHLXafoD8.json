{
  "resolvedId": "/Users/mmk/listen/listen-nuxt/node_modules/unenv/runtime/node/http/_response.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { Writable } from \"../stream/writable.mjs\";\nexport class ServerResponse extends Writable {\n  __unenv__ = true;\n  statusCode = 200;\n  statusMessage = \"\";\n  upgrading = false;\n  chunkedEncoding = false;\n  shouldKeepAlive = false;\n  useChunkedEncodingByDefault = false;\n  sendDate = false;\n  finished = false;\n  headersSent = false;\n  strictContentLength = false;\n  connection = null;\n  socket = null;\n  req;\n  _headers = {};\n  constructor(req) {\n    super();\n    this.req = req;\n  }\n  assignSocket(socket) {\n    socket._httpMessage = this;\n    this.socket = socket;\n    this.connection = socket;\n    this.emit(\"socket\", socket);\n    this._flush();\n  }\n  _flush() {\n    this.flushHeaders();\n  }\n  detachSocket(_socket) {\n  }\n  writeContinue(_callback) {\n  }\n  writeHead(statusCode, arg1, arg2) {\n    if (statusCode) {\n      this.statusCode = statusCode;\n    }\n    if (typeof arg1 === \"string\") {\n      this.statusMessage = arg1;\n      arg1 = void 0;\n    }\n    const headers = arg2 || arg1;\n    if (headers) {\n      if (Array.isArray(headers)) {\n      } else {\n        for (const key in headers) {\n          this.setHeader(key, headers[key]);\n        }\n      }\n    }\n    this.headersSent = true;\n    return this;\n  }\n  writeProcessing() {\n  }\n  setTimeout(_msecs, _callback) {\n    return this;\n  }\n  appendHeader(name, value) {\n    name = name.toLowerCase();\n    const current = this._headers[name];\n    const all = [\n      ...Array.isArray(current) ? current : [current],\n      ...Array.isArray(value) ? value : [value]\n    ].filter(Boolean);\n    this._headers[name] = all.length > 1 ? all : all[0];\n    return this;\n  }\n  setHeader(name, value) {\n    this._headers[name.toLowerCase()] = value;\n    return this;\n  }\n  getHeader(name) {\n    return this._headers[name.toLowerCase()];\n  }\n  getHeaders() {\n    return this._headers;\n  }\n  getHeaderNames() {\n    return Object.keys(this._headers);\n  }\n  hasHeader(name) {\n    return name.toLowerCase() in this._headers;\n  }\n  removeHeader(name) {\n    delete this._headers[name.toLowerCase()];\n  }\n  addTrailers(_headers) {\n  }\n  flushHeaders() {\n  }\n  writeEarlyHints(_headers, cb) {\n    if (typeof cb === \"function\") {\n      cb();\n    }\n  }\n}\n",
      "start": 1712416379438,
      "end": 1712416379467,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1712416379467,
      "end": 1712416379467,
      "order": "normal"
    }
  ]
}
